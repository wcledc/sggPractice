package com.atguigu.thread.demo1;
/*单例设计模式:
        *      含义:
        *          "创建唯一对象"的固定的解决方案
        *      分类:
        *          立即加载模式(饿汉式)
        *          延迟加载模式(懒汉式)
        *
        * 立即加载模式(饿汉式)步骤:
        *      1.将唯一对象所属类的构造器进行私有化
        *      2.在唯一对象所属类成员位置创建唯一的对象
        *      3.为了在外界可以访问唯一对象,将其进行静态化处理
        *      4.为了唯一对象在外界的安全性,将其进行私有化处理
        *      5.对外提供唯一对象的获取方式*/

//立即加载模式（饿汉式）
public class CEO {
    //创建唯一对象
    //为了可以被外界访问，将唯一对象静态化处理
    //为了在外界的安全性，将唯一对象私有化处理
    private static CEO ceo = new CEO();

   //将唯一对象所属类的构造器进行私有化
    private CEO(){}

    //为唯一对象提供共外界获取的方式


    public static CEO getCeo() {
        return ceo;
    }
}
